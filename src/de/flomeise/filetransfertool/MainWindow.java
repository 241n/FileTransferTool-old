/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainWindow.java
 *
 * Created on 18.06.2011, 22:33:59
 */
package de.flomeise.filetransfertool;

import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;
import javax.swing.tree.TreeSelectionModel;
import org.apache.commons.io.FileUtils;

/**
 *
 * @author Flohw
 */
public class MainWindow extends javax.swing.JFrame {
	DefaultTreeModel jTree1Model;
	Map<String,Recipient> recipients;
	/** Creates new form MainWindow */
	public MainWindow() {
		FileTransferTool.init(this);
		initComponents();
		jTree1.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
		jTree1Model = (DefaultTreeModel) jTree1.getModel();
		recipients = new HashMap<String, Recipient>();
		loadFavourites(this);
		expandAll(jTree1, true);
		setLocation((Toolkit.getDefaultToolkit().getScreenSize().width - getWidth()) / 2, (Toolkit.getDefaultToolkit().getScreenSize().height - getHeight()) / 2);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(FileTransferTool.NAME);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setLabelFor(jTextField1);
        jLabel1.setText("Address:");

        jLabel2.setLabelFor(jTextField2);
        jLabel2.setText("Port:");

        jTextField2.setText(Integer.toString(FileTransferTool.getDefaultPort()));
        jTextField2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel3.setLabelFor(jTextField3);
        jLabel3.setText("File:");

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Send Request");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Open Directory");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Settings");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("About");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Favourites");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jTree1);

        jButton6.setText("Add");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Edit");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Delete");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Up");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Down");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Add Folder");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton2))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel3))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                            .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                            .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10))
                    .addComponent(jScrollPane2, 0, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		jTextField3.setText(FileOpenDialog.open(JFileChooser.OPEN_DIALOG, null));
	}//GEN-LAST:event_jButton1ActionPerformed

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		final String address = jTextField1.getText();
		final int port = Integer.parseInt(jTextField2.getText().equals("") ? "0" : jTextField2.getText());
		final File file = new File(jTextField3.getText());
		if(address.equals("")) {
			JOptionPane.showMessageDialog(this, "Invalid address!");
		} else if(port == 0) {
			JOptionPane.showMessageDialog(this, "Invalid port!");
		} else if(!file.exists()) {
			JOptionPane.showMessageDialog(this, "File doesn't exists!");
		} else {
			ExecutorService pool = Executors.newCachedThreadPool();
			pool.execute(new Runnable() {
				public void run() {
					new FileTransferTool().send(file, address, port);
				}

			});
		}
	}//GEN-LAST:event_jButton2ActionPerformed

	private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
		if(FileTransferTool.getConnectionCount() == 0) {
			saveFavourites(this);
			dispose();
			doExit(0);
		}
	}//GEN-LAST:event_formWindowClosing

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
		try {
			new ProcessBuilder("explorer.exe", FileTransferTool.getProperty("save_dir")).start();
		} catch(IOException ex) {
			JOptionPane.showMessageDialog(this, "Directory could not be opened");
			Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
		}
	}//GEN-LAST:event_jButton3ActionPerformed

	private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
		new AboutDialog(this, true).setVisible(true);
	}//GEN-LAST:event_jButton5ActionPerformed

	private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
		new SettingsDialog(this, true).setVisible(true);
	}//GEN-LAST:event_jButton4ActionPerformed

	private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged
		DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
		if(node == null || node.getAllowsChildren() == true)
			return;
		
		Recipient r = recipients.get((String) node.getUserObject());
		jTextField1.setText(r.getAddress());
		jTextField2.setText(Integer.toString(r.getPort()));
	}//GEN-LAST:event_jTree1ValueChanged

	private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
		DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
		if(node == null)
			return;
		
		String name, address;
		int port;
		
		while(true) {
			name = JOptionPane.showInputDialog(this, "Please enter the name for the favourite:");
			if(name == null)
				return;
			if(!name.equals(""))
				break;
		}
		while(true) {
			address = JOptionPane.showInputDialog(this, "Please enter the address for the favourite:");
			if(address == null) 
				return;
			if(!address.equals(""))
				break;
		}
		while(true) {
			try {
				port = Integer.parseInt(JOptionPane.showInputDialog(this, "Please enter the port for the favourite:", FileTransferTool.getProperty("port")));
				if(port > 0)
					break;
			} catch(Exception e) {
			}
		}
		
		if(!node.getAllowsChildren())
			node = (DefaultMutableTreeNode) node.getParent();
			
		if(recipients.containsKey(name)) {
			JOptionPane.showMessageDialog(this, "Name already exists!");
			return;
		}

		recipients.put(name, new Recipient(name, address, port));
		node.add(new DefaultMutableTreeNode(name, false));
		
		redrawTree();
	}//GEN-LAST:event_jButton6ActionPerformed

	private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
		DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
		if(node == null)
			return;
		
		String name;
		
		while(true) {
			name = JOptionPane.showInputDialog(this, "Please enter the name for the folder:");
			if(name == null)
				return;
			if(!name.equals(""))
				break;
		}
		
		if(!node.getAllowsChildren())
			node = (DefaultMutableTreeNode) node.getParent();
			
		node.add(new DefaultMutableTreeNode(name, true));
		
		redrawTree();
	}//GEN-LAST:event_jButton11ActionPerformed

	private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
		DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
		if(node == null)
			return;
		
		if(node.getAllowsChildren()) {
			String name = (String) node.getUserObject();
		
			while(true) {
				name = JOptionPane.showInputDialog(this, "Please enter the name for the folder:", name);
				if(name == null)
					return;
				if(!name.equals(""))
					break;
			}
			
			node.setUserObject(name);
		} else {
			Recipient r = recipients.get((String) node.getUserObject());
			String name = r.getName(), address = r.getAddress();
			int port = r.getPort();
			String old_name = name;
			
			while(true) {
				name = JOptionPane.showInputDialog(this, "Please enter the name for the favourite:", name);
				if(name == null)
					return;
				if(!name.equals(""))
					break;
			}
			while(true) {
				address = JOptionPane.showInputDialog(this, "Please enter the address for the favourite:", address);
				if(address == null) 
					return;
				if(!address.equals(""))
					break;
			}
			while(true) {
				try {
					port = Integer.parseInt(JOptionPane.showInputDialog(this, "Please enter the port for the favourite:", Integer.toString(port)));
					if(port > 0)
						break;
				} catch(Exception e) {
				}
			}
			
			recipients.remove(old_name);
			recipients.put(name, new Recipient(name, address, port));
			node.setUserObject(name);
		}
		
		redrawTree();
	}//GEN-LAST:event_jButton7ActionPerformed

	private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
		DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
		if(node == null)
			return;
		
		if(JOptionPane.showConfirmDialog(this, "Are you really sure you want to delete this?", "Sure?", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
			if(node.getAllowsChildren() == true && node.getChildCount() > 0) {
				JOptionPane.showMessageDialog(this, "Directory is not empty!");
				return;
			}
			recipients.remove((String) node.getUserObject());
			node.removeFromParent();
		}
		
		redrawTree();
	}//GEN-LAST:event_jButton8ActionPerformed

	private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
		DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
		if(node == null)
			return;
		
		DefaultMutableTreeNode node2 = (DefaultMutableTreeNode) node.getParent();
		if(node2 != null && node2.getIndex(node) > 0) {
			node2.insert(node, node2.getIndex(node) - 1);
		}
		redrawTree();
	}//GEN-LAST:event_jButton9ActionPerformed

	private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
		DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
		if(node == null)
			return;
		
		DefaultMutableTreeNode node2 = (DefaultMutableTreeNode) node.getParent();
		if(node2 != null && node2.getIndex(node) < node2.getChildCount() - 1) {
			node2.insert(node, node2.getIndex(node) + 1);
		}
		
		redrawTree();
	}//GEN-LAST:event_jButton10ActionPerformed

	private void redrawTree() {
		expandAll(jTree1, true);
		jTree1Model.reload();
		jTree1.updateUI();
		jTree1.repaint();
		jTree1.revalidate();
	}
	
	private void expandAll(JTree tree, boolean expand) {
		TreeNode root = (TreeNode)tree.getModel().getRoot();

		// Traverse tree from root
		expandAll(tree, new TreePath(root), expand);
	}
	
	private void expandAll(JTree tree, TreePath parent, boolean expand) {
		// Traverse children
		TreeNode node = (TreeNode)parent.getLastPathComponent();
		if (node.getChildCount() >= 0) {
			for (Enumeration e=node.children(); e.hasMoreElements(); ) {
				TreeNode n = (TreeNode)e.nextElement();
				TreePath path = parent.pathByAddingChild(n);
				expandAll(tree, path, expand);
			}
		}

		// Expansion or collapse must be done bottom-up
		if (expand) {
			tree.expandPath(parent);
		} else {
			tree.collapsePath(parent);
		}
	}

	private static void loadFavourites(MainWindow mw) {		
		XStream x = new XStream(new DomDriver());
		try {
			mw.jTree1.setModel((DefaultTreeModel) x.fromXML(new FileInputStream(new File("favourites1.xml"))));
			mw.recipients = (Map<String,Recipient>) x.fromXML(new FileInputStream(new File("favourites2.xml")));
		} catch(FileNotFoundException ex) {
			Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
	
	private static void saveFavourites(MainWindow mw) {
		XStream x = new XStream(new DomDriver());
		try {
			x.toXML(mw.recipients, new FileOutputStream(new File("favourites2.xml")));
			x.toXML(mw.jTree1.getModel(), new FileOutputStream(new File("favourites1.xml")));
		} catch(FileNotFoundException ex) {
			Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
	
	private static void doExit(int ret) {
		FileTransferTool.saveProperties();
		System.runFinalization();
		System.exit(ret);
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) throws Exception {
		try {
			UIManager.setLookAndFeel(
					UIManager.getSystemLookAndFeelClassName());
		} catch(ClassNotFoundException ex) {
			Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
		} catch(InstantiationException ex) {
			Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
		} catch(IllegalAccessException ex) {
			Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
		} catch(UnsupportedLookAndFeelException ex) {
			Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
		}

		if(args.length == 2 && args[0].equals("-update")) {
			File oldJar = new File(args[2]);
			File lock = new File(oldJar.getParentFile(), "lock");
			
			while(lock.exists()) {
				Thread.sleep(100);
			}
			
			File newJar = new File(MainWindow.class.getProtectionDomain().getCodeSource().getLocation().toURI());
			FileUtils.copyFile(newJar, oldJar);
			new ProcessBuilder(oldJar.getCanonicalPath()).start();
			return;
		}
		
		File lock = new File("lock");
		FileUtils.touch(lock);
		lock.deleteOnExit();
		
		if(!(args.length == 1 && args[0].equals("-noupdate"))) {
			Updater.update("http://flomeise.de/coding/updater/", "FileTransferTool", FileTransferTool.VERSION);
			
			File updateFolder = new File("update");
			File currentJar = new File(MainWindow.class.getProtectionDomain().getCodeSource().getLocation().toURI());
			if(updateFolder.exists() && updateFolder.isDirectory() && currentJar.exists() && currentJar.isFile()) {
				new ProcessBuilder(new File(updateFolder.getCanonicalPath(), currentJar.getName()).getCanonicalPath(), "-update", currentJar.getCanonicalPath()).start();
				return;
			}
		}
		
		java.awt.EventQueue.invokeAndWait(new Runnable() {
			@Override
			public void run() {
				new MainWindow().setVisible(true);
			}
		});

		Thread t = new Thread() {
			@Override
			public void run() {
				FileTransferTool.listen();
			}
		};
		t.setDaemon(true);
		t.start();
		
		/*Thread t2 = new Thread() {
			@Override
			public void run() {
				while(true) {
					
				}
			}
		}*/
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
